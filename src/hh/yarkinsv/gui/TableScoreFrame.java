package hh.yarkinsv.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import hh.yarkinsv.TableScore;

import javax.swing.*;
import java.awt.*;
import hh.yarkinsv.Frame;

/**
 * Created by RRP-YarkinSV on 04.02.2016.
 */
public class TableScoreFrame extends JFrame {


    private JPanel panel1;
    private JTextField textField1;
    private JTextField textField2;
    private JTextField textField3;
    private JTextField textField4;
    private JTextField textField5;
    private JTextField textField6;
    private JTextField textField7;
    private JTextField textField8;
    private JTextField textField9;
    private JTextField textField10;
    private JLabel textName;

    private TableScore tableScore;

    public TableScoreFrame(TableScore tableScore) {
        this.tableScore = tableScore;
        updateUI();

        this.add(this.panel1);
        this.pack();
    }

    public void updateUI() {
        textField1.setText(getFrameText(tableScore.getFrames()[0]));
        textField2.setText(getFrameText(tableScore.getFrames()[1]));
        textField3.setText(getFrameText(tableScore.getFrames()[2]));
        textField4.setText(getFrameText(tableScore.getFrames()[3]));
        textField5.setText(getFrameText(tableScore.getFrames()[4]));
        textField6.setText(getFrameText(tableScore.getFrames()[5]));
        textField7.setText(getFrameText(tableScore.getFrames()[6]));
        textField8.setText(getFrameText(tableScore.getFrames()[7]));
        textField9.setText(getFrameText(tableScore.getFrames()[8]));
        textField10.setText(getFrameText(tableScore.getFrames()[9]));
        textName.setText(tableScore.getPlayer().getName());
    }

    private String getFrameText(Frame frame) {
        switch (frame.getFrameType()) {
            case NotCompleted:
                return "";
            case OpenFrame:
                return (frame.getFirstBall() == 0 ? "-" : frame.getFirstBall()) + "  " +
                        (frame.getSecondBall() == 0 ? "-" : frame.getSecondBall());
            case Spare:
                return (frame.getFirstBall() == 0 ? "-" : frame.getFirstBall()) + "  /";
            case Strike:
                return "   X";
        }
        return "";
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 11, new Insets(0, 0, 0, 0), -1, -1));
        textField1 = new JTextField();
        panel1.add(textField1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textField2 = new JTextField();
        panel1.add(textField2, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textField3 = new JTextField();
        panel1.add(textField3, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textField4 = new JTextField();
        panel1.add(textField4, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textField5 = new JTextField();
        panel1.add(textField5, new GridConstraints(0, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textField6 = new JTextField();
        panel1.add(textField6, new GridConstraints(0, 6, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textField7 = new JTextField();
        panel1.add(textField7, new GridConstraints(0, 7, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textField8 = new JTextField();
        panel1.add(textField8, new GridConstraints(0, 8, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textField9 = new JTextField();
        panel1.add(textField9, new GridConstraints(0, 9, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textField10 = new JTextField();
        panel1.add(textField10, new GridConstraints(0, 10, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, -1), null, new Dimension(25, -1), 0, false));
        textName = new JLabel();
        textName.setFont(new Font(textName.getFont().getName(), textName.getFont().getStyle(), 16));
        textName.setText("Label");
        panel1.add(textName, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(100, -1), null, new Dimension(100, -1), 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
